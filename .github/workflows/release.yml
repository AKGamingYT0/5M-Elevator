name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    name: Build and Create Tagged release
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Install archive tools
        run: sudo apt install zip

      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}

      - name: Get variables
        id: get_vars
        run: |
          echo '::set-output name=SHORT_SHA::$(git rev-parse --short HEAD)'
          echo '::set-output name=DATE::$(date +'%D')'
          echo '::set-output name=VERSION::${GITHUB_REF#refs/tags/}'  # Extracts the version from the tag

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run build in web/
        working-directory: web
        run: npm run build

      - name: Update fxmanifest version
        run: |
          sed -i "/^version/c\\version '${{ steps.get_vars.outputs.VERSION }}'" fxmanifest.lua

      - name: Commit updated fxmanifest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add fxmanifest.lua
          git commit -m "Update fxmanifest version to ${{ steps.get_vars.outputs.VERSION }}"
          git push

      - name: Bundle files for release
        run: |
          zip -r ${{ github.event.repository.name }}.zip . \
          -x "./.github/*" \
             "./web/src/*" \
             "./web/public/*" \
             "./web/*.json" \
             "./web/*.lock" \
             "./node_modules/*" \
             "*.ts" \
             "*.md" \
             "*.yaml"

      - name: Create Release
        uses: marvinpinto/action-automatic-releases@v1.2.1
        id: auto_release
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          title: '${{ steps.get_vars.outputs.VERSION }}'
          prerelease: false
          files: ${{ github.event.repository.name }}.zip
